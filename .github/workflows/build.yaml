name: Build

on:
    workflow_dispatch:
    push:
        branches:
            - main
    pull_request:
        branches: [main]

jobs:
    build:
        env:
            DOTNET_CLI_TELEMETRY_OPTOUT: 0
        name: Build
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, windows-latest, ubuntu-18.04, ubuntu-20.04]
            # dotnetVersion: [3.1.x, 5.0.x]
            dotnetVersion: [3.1.x]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v1
              with:
                dotnet-version: ${{ matrix.dotnetVersion }}

            - name: Build
              run: dotnet build tests/JsonmultidimensionalArrayExtesnsions.Tests/JsonmultidimensionalArrayExtesnsions.Tests.csproj --configuration Release

            - name: Unit Test with coverage
              if: ${{ matrix.os == 'ubuntu-20.04' }}
              run: dotnet test ./tests/JsonmultidimensionalArrayExtesnsions.Tests/JsonmultidimensionalArrayExtesnsions.Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput='./../../coverage/'
              

            - name: Unit Test with summary 
              if: ${{ matrix.os != 'ubuntu-20.04' }}
              run: dotnet test ./tests/JsonmultidimensionalArrayExtesnsions.Tests/JsonmultidimensionalArrayExtesnsions.Tests.csproj --logger "junit;LogFilePath='../../results/tests.xml'"

            # - name: Upload coverage to Codecov
            #   uses: codecov/codecov-action@v1.2.1
            #   with:
            #       token: ${{ secrets.CODECOV_TOKEN }}
            #       directory: ./coverage/
            #       flags: unittests
            #       name: codecov-umbrella
            #       fail_ci_if_error: true
            #       gcov_path_exclude: 'samples/**/*'
            #       path_to_write_report: ./coverage/codecov_report.txt
            #       verbose: true
            - name: Upload coverage to Codecov
              if: ${{ matrix.os == 'ubuntu-20.04' }}
              uses: codecov/codecov-action@v2
              with:
                token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
                directory: ./coverage/
                flags: unittests # optional
                name: codecov-umbrella # optional
                fail_ci_if_error: true # optional (default = false)
                path_to_write_report: ./coverage/codecov_report.txt
                verbose: true # optional (default = false)
 
            - name: Create test summary
              uses: test-summary/action@dist
              with:
                 paths: results/**/*.xml
              if: ${{ matrix.os != 'ubuntu-20.04' }}
